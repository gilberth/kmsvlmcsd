name: Build and Push Docker Images

on:
  push:
    branches:
      - master
      - main
    tags:
      - 'v*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE: kms
  IMAGE_SECURE_SUFFIX: -secure

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Derive lowercase owner namespace
        run: |
          owner="${GITHUB_REPOSITORY%%/*}"
          echo "IMAGE_NS=${owner,,}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NS }}/${{ env.IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Extract metadata for secure image
        id: meta-secure
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NS }}/${{ env.IMAGE }}${{ env.IMAGE_SECURE_SUFFIX }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build & Push (standard)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build & Push (secure)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.secure
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-secure.outputs.tags }}
          labels: ${{ steps.meta-secure.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update README with registry information
        if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
        run: |
          echo "## Docker Images" > docker-info.md
          echo "" >> docker-info.md
          echo "The following Docker images are available on GitHub Container Registry:" >> docker-info.md
          echo "" >> docker-info.md
          echo "### Standard Image" >> docker-info.md
          echo '```bash' >> docker-info.md
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NS }}/${{ env.IMAGE }}:latest" >> docker-info.md
          echo '```' >> docker-info.md
          echo "" >> docker-info.md
          echo "### Secure Image (with SSL support)" >> docker-info.md
          echo '```bash' >> docker-info.md
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NS }}/${{ env.IMAGE }}${{ env.IMAGE_SECURE_SUFFIX }}:latest" >> docker-info.md
          echo '```' >> docker-info.md
